

import collections, re
def reg():
	pats=[]
	pats.append( re.compile(r"(\w+ )\w*(how )?((much)|(mani)) (\w+ )((vinegar)|(finger)|(liquid))\w*( \w+)") )
	pats.append( re.compile(r"(\w+ )\w*how much (\w+ )((put)|(fill))\w*( \w+)") )
	pats.append( re.compile(r"(\w+ )\w*((vinegar)|(finger)) (\w+ )measur\w*( \w+)") )
	pats.append( re.compile(r"(\w+ )\w*((aunt)|(man)|(a?mount)|(measur)|(volum)|(quantiti)) (\w+ )((vinegar)|(finger)|(liquid))\w*( \w+)") )
	pats.append( re.compile(r"(\w+ )\w*((size)|(volum)) (\w+ )((contain)|(cup))\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*how ((big)|(larg)|(wide)) (\w+ )((contain)|(cup))\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*measur (\w+ )contain\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*contain (\w+ )size\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*((sort)|(type)|(kind)) (\w+ )((contain)|(cup))\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*materi of the contain\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*what (\w+ )contain\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*((describ)|(specif\w*)) (\w+ )contain\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*contain (\w+ ) ((us)|(need))\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*contain ar made of\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*us as (a )?contain\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*know (\w+ )?about (\w+ )contain\w*( \w+)") )
	#pats.append ( re.compile(r"what ar (\w +)contain") )
	pats.append ( re.compile(r"(\w+ )\w*((kind)|(type)) of (the\w* (\w+ )?)?(differ (\w+ )?)?(\w+ )?((materi)|(marbl)|(sampl)|(object)|(substanc))\w*( \w+)")  )
	pats.append ( re.compile(r"(\w+ )\w*materi type\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*speci materi\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*((what)|(which)) (\w+ )((sampl)|(materi)|(item)|(substanc)|(object)) ((ar)|(is)|(were)|(wa))\w*( \w+)"))
	pats.append ( re.compile(r"(\w+ )\w*know (\w+ )((sampl)|(materi)|(item)|(substanc)|(object)) ((ar)|(is)|(were)|(wa))?\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*know (\w+ )what (\w+ )((materi)|(sampl)) ((ar)|(is)|(were)|(wa))?\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*((know)|(need)) the materi\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*list of ((materi)|(suppli)|(object))\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*what materi\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*what (\w+ )materi (\w+ )((sampl)|(item)|(substanc)|(object))\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*what ((were)|(ar)|(is)|(wa)) the (\w+ )?(\w+ )?((sampl)|(item)|(substanc)|(object))\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*name (\w+ )((sampl)|(item)|(element)|(substanc)|(object))?\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*((materi)|(sampl)|(object)) (\w+ )((us)|(need))\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*mean\w* by (\w+ ) sampl\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*((explain)|(give)|(told)|(tell)|(describ)|(list)|(stat)|(nam)|(identifi)|(specifi)|(writ)|(includ))\w* (\w+ )((sampl)|(substanc)|(materi)|(object))\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*sampl ((nam)|(typ))\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*told the sampl\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*know which sampl\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*word sampl\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*specifi (\w+ )sampl\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*know (\w+ )and (\w+ )sampl\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*materi (\w+ )((describ)|(list)|(stat)|(name)|(identifi)|(specifi)|(written)|(includ))\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*sampl of what\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*what do we us for (the )?sampl\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*us (\w+ )?same materi\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*type of rock\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*kind of stone\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*size (of (\w+ ))?(\w+ )((materi)|(marbl)|(sampl))\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*how ((big)|(larg)|) (\w+ )((materi)|(sampl)|(object)|(piec))\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*how much (\w+ )materi\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*((sampl)|(materi)|(substanc)) (\w+ )size\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*how larg a sampl\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*small or piec\w*( \w+)") )
	#pats.append ( re.compile(r"amount of each sampl") )
	pats.append ( re.compile(r"(\w+ )\w*((type)|(kind)|(brand)) of vinegar\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*((concentr)|( \w?h)|(acid)) (\w+ )vinegar\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*vinegar (\w+ )?((concentr)|(acid))\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*know (\w+ )?vinegar (\w+ )?((us)|(need))\w*( \w+)") )
	#pats.append ( re.compile(r"amount of distilled water to rinse" ) )
	pats.append ( re.compile(r"(\w+ )\w*where (\w+ )((leav)|(put)|(store)|(sit)|(keep)|(store)|(pour)) (\w+ )((experi)|(materi)|(sampl)|(contain)|(cup))\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*where (\w+ )place (\w+ )((sampl))\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*what (\w+ )place (\w+ )sampl\w*( \w+)") )
	#pats.append ( re.compile(r"where (\w+ )place (\w+ )contain") )
	pats.append ( re.compile(r"(\w+ )\w*where (\w+ )the (\w+ )((materi)|(sampl)|(contain)) (\w+ )((leav)|(put)|(store)|(sit)|(keep))\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*where the ((sampl)|(contain)) ar( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*where thei left the contain\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*where (\w+ )?((sampl)|(contain))? (\w+ )?((stai)|(dr(i|y)))\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*where. (\w+ )leav these contain\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*where ((ar)|(were)) (\w+ )?((sampl)|(contain))\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*where (\w+ )dr(i|y)\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*where do thei go\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*where to let the(se)? ((sampl)|(contain))\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*area ([a-z]+ )to( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*how to store\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*refri\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*((locat)|(site)) (\w+ )((contain)|(sampl))\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*outsid\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*surfac ar\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*shape (\w+ )sampl\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*how? long (\w+ )(([a-z]?rin?[a-z])|(wash))\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*time (\w+ )rin?s\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*rins (\w+ )how long\w*( \w+)" ))
	pats.append ( re.compile(r"(\w+ )\w*time for rin?s\w*( \w+)" ))
	pats.append ( re.compile(r"(\w+ )\w*room temp( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*what temp\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*and the temp\w*( \w+)") )
	#pats.append ( re.compile(r"what ([a-z]+ )condit") )
	pats.append ( re.compile(r"(\w+ )\w*room temperatur\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*temperatur (\w+ )") )
	pats.append ( re.compile(r"(\w+ )\w*temp((eratur)|( \.)) of the ((room)|(surround))\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*temperatur in the( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*temperatur at which( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*kind of ((temperatur)|(environ))\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*includ (\w+ )temp\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*how to ((rins)|(dr(i|y)))\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*how to ((\w+ )(sampl ))?(\w+ )((dr(i|y))|(rin))\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*how to (\w+ )((dr(i|y))|(rins))\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*how (\w+ )?sampl (\w+ )wash\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*((close)|(cover)) (\w+ )((sampl)|(contain))\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*((sampl)|(contain)) (\w+ )cover\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*top (\w+ )contain\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*((fulli)|(complet)) submerg\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*whole (\w+ )submerg?\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*heat\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*dark\w*( \w+)") )
	pats.append ( re.compile(r"(\w+ )\w*type of climat\w*( \w+)") )
	return pats

